[{"C:\\Users\\cjwar\\Documents\\Work\\Interviews\\SpyCloud\\Code test\\SpyCloudBackend\\ClientApp\\src\\index.js":"1","C:\\Users\\cjwar\\Documents\\Work\\Interviews\\SpyCloud\\Code test\\SpyCloudBackend\\ClientApp\\src\\App.js":"2","C:\\Users\\cjwar\\Documents\\Work\\Interviews\\SpyCloud\\Code test\\SpyCloudBackend\\ClientApp\\src\\registerServiceWorker.js":"3","C:\\Users\\cjwar\\Documents\\Work\\Interviews\\SpyCloud\\Code test\\SpyCloudBackend\\ClientApp\\src\\components\\Layout.js":"4","C:\\Users\\cjwar\\Documents\\Work\\Interviews\\SpyCloud\\Code test\\SpyCloudBackend\\ClientApp\\src\\components\\FetchData.js":"5","C:\\Users\\cjwar\\Documents\\Work\\Interviews\\SpyCloud\\Code test\\SpyCloudBackend\\ClientApp\\src\\components\\NavMenu.js":"6"},{"size":519,"mtime":1608309296000,"results":"7","hashOfConfig":"8"},{"size":418,"mtime":1608357114000,"results":"9","hashOfConfig":"8"},{"size":4121,"mtime":1608309296000,"results":"10","hashOfConfig":"8"},{"size":373,"mtime":1608309296000,"results":"11","hashOfConfig":"8"},{"size":8893,"mtime":1608870862000,"results":"12","hashOfConfig":"8"},{"size":1334,"mtime":1608356218000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"195fj29",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\cjwar\\Documents\\Work\\Interviews\\SpyCloud\\Code test\\SpyCloudBackend\\ClientApp\\src\\index.js",[],["28","29"],"C:\\Users\\cjwar\\Documents\\Work\\Interviews\\SpyCloud\\Code test\\SpyCloudBackend\\ClientApp\\src\\App.js",[],"C:\\Users\\cjwar\\Documents\\Work\\Interviews\\SpyCloud\\Code test\\SpyCloudBackend\\ClientApp\\src\\registerServiceWorker.js",[],"C:\\Users\\cjwar\\Documents\\Work\\Interviews\\SpyCloud\\Code test\\SpyCloudBackend\\ClientApp\\src\\components\\Layout.js",[],"C:\\Users\\cjwar\\Documents\\Work\\Interviews\\SpyCloud\\Code test\\SpyCloudBackend\\ClientApp\\src\\components\\FetchData.js",["30"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/index.css';\r\nimport Fuse from 'fuse.js';\r\nimport {Progress} from \"reactstrap/es\";\r\n\r\n// options for fuse.js(fuzzy search in object array)\r\nconst options = {\r\n    includeScore: true,\r\n    shouldSort: true,\r\n    keys: ['payload.password'],\r\n    findAllMatches: true,\r\n};\r\n\r\nexport class FetchData extends Component {\r\n    static displayName = FetchData.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            file: null,\r\n            result: {\r\n                csvData: [],\r\n                apiResult: [],\r\n                matchedResult: []\r\n            },\r\n            fuse: null,\r\n        };\r\n    }\r\n\r\n    uploadCSV() {\r\n        if (!this.state.file) {\r\n            alert(\"Please select csv file!\");\r\n            return;\r\n        }\r\n        let formData = new FormData();\r\n        let {file} = this.state;\r\n        formData.append(\"fileName\", file.name);\r\n        formData.append(\"formFile\", file);\r\n        this.setState({ loading: true });\r\n        // Send request to backend(upload file , response matched result)\r\n        axios.post('api/File', formData).then(res => {\r\n            let fu = new Fuse(res.data.apiResult, options);\r\n            this.setState({\r\n                loading: false,\r\n                result: res.data,\r\n                fuse: fu,\r\n            });\r\n        }).catch(err => {\r\n            this.setState({loading: false});\r\n            alert('Something went wrong!')\r\n        })\r\n    }\r\n\r\n    // Pick CSV file\r\n    onSelectFile(e) {\r\n        this.setState({file: e.target.files[0]});\r\n    }\r\n\r\n    // Check if one character is mismatch\r\n    isMismatchOne(str1, str2) {\r\n        let flag = true;\r\n        let s1 = str1.length < str2.length ? str1 : str2; // small\r\n        let s2 = str1.length < str2.length ? str2 : str1; //big\r\n        if (s1 === s2) flag = false;\r\n        if (s2.includes(s1) && s1.length < s2.length - 1) {\r\n            flag = false;\r\n        }\r\n        for (let i = 0; i < s1.length; i++) {\r\n            if (s1[i] !== s2[i]) {\r\n                if (s1[i] !== s2[i + 1]) {\r\n                    flag = false;\r\n                } else {\r\n                    if (s1.substring(i, s1.length - 1) !== s2.substring(i + 1, s2.length - 1)) {\r\n                        flag = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    // Render table function\r\n    renderResultTable(result) {\r\n        // Initialize fuse object\r\n        let fuse = new Fuse(result.apiResult, options);\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mb-5\">\r\n                        <h4>CSV Data</h4>\r\n                        <div className=\"table-responsive\">\r\n                            <table className='table table-striped'>\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    <th>Email</th>\r\n                                    <th>Password</th>\r\n                                    <th>Desirable Items</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {result.csvData.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{item.result.email}</td>\r\n                                                <td>\r\n                                                    {item.result.password}\r\n                                                </td>\r\n                                                <td>\r\n                                                    <ul className=\"list-group list-group-flush\">\r\n                                                        {\r\n                                                            fuse.search(item.result.password).filter(o => {\r\n                                                                return (o.item.payload.email === item.result.email) && (Math.ceil((1 - o.score) * 100))\r\n                                                            }).map((it, key) => {\r\n                                                                let originalPwd = item.result.password;\r\n                                                                let resultPwd = it.item.payload.password;\r\n                                                                if ((originalPwd === resultPwd) || (originalPwd !== resultPwd && this.isMismatchOne(originalPwd, resultPwd)))\r\n                                                                    return (\r\n                                                                        <li className=\"list-group-item d-flex w-75 bg-transparent\"\r\n                                                                            key={key}>\r\n                                                                            <div\r\n                                                                                className=\"d-flex justify-content-center align-items-center p-2\">\r\n                                                                                {it.item.payload.password}\r\n                                                                            </div>\r\n                                                                            <div\r\n                                                                                className=\"justify-content-center align-items-center p-2\">\r\n                                                                                <div\r\n                                                                                    className=\"text-center\"\r\n                                                                                >\r\n                                                                                    {(originalPwd === resultPwd) ? \"Complete Match\" : \"One character mismatch\"}\r\n                                                                                </div>\r\n                                                                                <Progress\r\n                                                                                    style={{backgroundColor: `rgb(0 ${255 * (1 - it.score)} 0)`}}\r\n                                                                                    value={Math.ceil((1 - it.score) * 100)}/>\r\n                                                                            </div>\r\n                                                                        </li>\r\n                                                                    )\r\n                                                            })\r\n                                                        }\r\n                                                    </ul>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let {file, loading, fuse} = this.state;\r\n        let contents = loading\r\n            ? <p><em>Loading...</em></p>\r\n            : this.renderResultTable(this.state.result, fuse);\r\n\r\n        return (\r\n            <div>\r\n                <h1>Password Check</h1>\r\n                <p>Please upload CSV file to server.</p>\r\n                <div className=\"pb-5\">\r\n                    <div className=\"custom-file\">\r\n                        <input type=\"file\" className=\"custom-file-input\" id=\"validatedCustomFile\" required\r\n                               onChange={(e) => this.onSelectFile(e)}/>\r\n                        <label className=\"custom-file-label\"\r\n                               htmlFor=\"validatedCustomFile\">{file ? file.name : \"Choose CSV file...\"}</label>\r\n                        <div className=\"invalid-feedback\">Example invalid custom file feedback</div>\r\n                    </div>\r\n                    <div className=\"pt-2 pb-2\">\r\n                        <button className=\"buttonload flex-fill\" onClick={() => this.uploadCSV()}>\r\n                            {this.state.loading && <i className=\"fa fa-spinner fa-spin\"></i>}\r\n                            {this.state.loading ? \"Loading\" : \"Upload\"}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {contents}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\cjwar\\Documents\\Work\\Interviews\\SpyCloud\\Code test\\SpyCloudBackend\\ClientApp\\src\\components\\NavMenu.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":117,"column":78,"nodeType":"37","messageId":"38","endLine":117,"endColumn":80},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]